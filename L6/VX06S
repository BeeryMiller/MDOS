* FILENAME: VX06S
*
* ScrollWinUp
*
* R1x = Number of lines to scroll
* R2x = Row number of upper left corner
* R3x = Column number of upper left corner
* R4x = Row number of lower right corner
* R5x = Column number of lower right corner
* R6x = Character value for blank lines
* R7h = Foreground color for blank lines (NO COLOR IN TEXT MODES & M3)
* R7l = Background color for blank lines
*
X906LS  DATA    X906M0,X906M0,X906M2,X906M0
        DATA    X906M4,X906M4,X906M6,X906M6
        DATA    X906M6,X906M6
SCROFF DATA SCRBUF
DATA1  DATA 1
NROWS  DATA 0
NCOLS  DATA 0
LMSK0  DATA 0
LMSK1  DATA 0
RMSK0  DATA 0
RMSK1  DATA 0
UPDOWN DATA 0
*
X906VC
X906L1  C       @4(R13),@8(R13)
        JH      X906RT
        C       @6(R13),@10(R13)
        JH      X906RT
        MOV     @2(R13),R10             * R10 increment
        MOV     @VIDMOD,R1
        SLA     R1,1
        MOV     @X906LS(R1),R1
        MOV     R11,@X9STAK
        BL      *R1
        MOV     @X9STAK,R11
X906RT  RT
*
X906M0 MOV  R11,@X900ST
       CLR  @UPDOWN
       MOV  R10,@NROWS
       MOV  @10(R13),@NCOLS
       S    @6(R13),@NCOLS
       MOV  @6(R13),R0
       ANDI R0,7
       LI   R5,>FF
       SRC  R5,0
       MOV  R5,@LMSK0
       INV  R5
       MOV  R5,@LMSK1
       LI   R1,7
       MOV  @10(R13),R5
       ANDI R5,7
       S    R5,R1
       LI   R0,16
       S    R1,R0
       LI   R5,>FF
       SRC  R5,0
       MOV  R5,@RMSK0
       INV  R5
       MOV  R5,@RMSK1
       MOV  @8(R13),R9
       S    @4(R13),R9        number of rows to move - 1
       INC  R9
*
       C    R10,R9
       JH   X906K0
       MOV  R10,R10
       JNE  X906L0
X906K0 MOV  R9,R10
*
X906L0 MOV  @4(R13),R8        start row
       MPY  @D80,R8
       A    @6(R13),R9        r9 now has start offset
*
       MOV  @8(R13),R7        stop row
       MPY  @D80,R7
       A    @6(R13),R8        r8 now has address of 1st char on last row
*
       MOV  @4(R13),R6
       A    R10,R6            row # of row to move to first row
       MPY  @D80,R6
       A    @6(R13),R7        r7 now has address of 1st char on row to move
*
* check if full screen, if so, just move pointer and jump to blank screen
*
       MOV  @6(R13),R0
       JNE  X906N0            not full screen
*
       MOV  @10(R13),R0
       INC  R0
       C    R0,@CHCOLS
       JL   X906N0            not full screen
*
       MOV  @4(R13),R0
       JNE  X906N0            not full screen
*
       MOV  @8(R13),R0
       INC  R0
       C    R0,@CHROWS
       JL   X906N0            not full screen
*
* SCROLL BLINK BITS ONLY
*
       C    @VIDMOD,@DATA1
       JNE  BLNKL1
       MOV  R7,R5
BLNKL0 C    R5,R8
       JH   BLNKL1
       MOV  R5,R0
       BL   @SCRBV
       AI   R5,80
       JMP  BLNKL0
*
BLNKL1
       MOV  R10,R1            # rows to move up
       MPY  @D80,R1
*
       A    @SCROFF,R2        bump old pointer
       C    R2,@SCREND         check if in range
       JL   X906O0
       S    @SCRADD,R2         if not in range, wrap it back
X906O0 MOV  R2,@SCROFF        new screen offset
       MOV  R8,R6
       MOV  R10,R0
       DEC  R0
       MPY  @D80,R0
       S    R1,R6             number of chars to blank - 80
       JGT  X906P0
       CLR  R6                start at begining of screen
       JMP  X906P0            go to blank the bottom rows
*
X906N0 MOV  R9,R6             dest   char address
       MOV  R7,R5             source char address
*
*
Y90000 C    R5,R8             at last row?
       JH   X906P0            yes, done with move up
*
       MOV  R6,R4
       A    @SCROFF,R4
       C    R4,@SCREND
       JL   Y90001
       S    @SCRADD,R4
Y90001 MOV  R5,R3
       A    @SCROFF,R3
       C    R3,@SCREND
       JL   Y90002
       S    @SCRADD,R3
Y90002 MOV  @10(R13),R2
       S    @6(R13),R2        # of columns to move
Y90003 MOVB *R3+,*R4+
       DEC  R2
       JOC  Y90003            more chars to move from this row
*
* CALL ROUTINE TO SCROLL BLINK BITS
*
       C    @VIDMOD,@DATA1
       JNE  NOBLNU
       MOV  R5,R0
       BL   @SCRBV
NOBLNU
       AI   R6,80
D80    EQU  $-2
       AI   R5,80             move to next row
       JMP  Y90000
*
* screen data moved, now to blank bottom rows
*
X906P0 MOVB @13(R13),R0       char to blank screen with
*
Y90010 C    R6,R8             done yet?
       JH   X906Q0            yes, now to update screen buffer
*
       C    @VIDMOD,@DATA1
       JNE  NOBLU1
       MOV  R6,R5
       BL   @SCRBLN
NOBLU1
       MOV  R6,R3
       A    @SCROFF,R3
       C    R3,@SCREND
       JL   Y90011
       S    @SCRADD,R3
Y90011 MOV  @10(R13),R2
       S    @6(R13),R2
Y90012 MOVB R0,*R3+
       DEC  R2
       JOC  Y90012            not done with blanking this row
       AI   R6,80
       JMP  Y90010            check if done
*
* now to move data from the screen buffer to the vdp screen
*
X906Q0 MOV  R9,R6
       MOV  @4(R13),R4
       MPY  @CHCOLS,R4
       A    @6(R13),R5        r5 has address of char in screen buffer
       A    @SCRIMG,R5        r5 has vdp address of char in screen buffer
*
Y90020 C    R6,R8             done yet?
       JH   X906R0
*
       MOV  R6,R4
       A    @SCROFF,R4
       C    R4,@SCREND
       JL   Y90021
       S    @SCRADD,R4
Y90021 MOV  @10(R13),R2
       S    @6(R13),R2
*
       SWPB @SCRIMG+2
       MOVB @SCRIMG+2,@VDPWA
       SWPB @SCRIMG+2
       MOVB @SCRIMG+2,@VDPWA
*
       MOV  R5,R3
       ORI  R3,>4000
       SWPB R3
       MOVB R3,@VDPWA
       SWPB R3
       MOVB R3,@VDPWA
*
Y90022 MOVB *R4+,@VDPWD
       DEC  R2
       JOC  Y90022
       AI   R6,80
       A    @CHCOLS,R5
       JMP  Y90020
*
X906R0 MOV  @X900ST,R11
       RT
*
* Scroll color (blink) table of TEXT 80
*
*
SCRBV  SWPB @CTABLE+2
       MOVB @CTABLE+2,@VDPWA
       SWPB @CTABLE+2
       MOVB @CTABLE+2,@VDPWA
       SRL  R0,3
       A    @CTABLE,R0
       SWPB R0
       MOVB R0,@VDPWA
       SWPB R0
       MOVB R0,@VDPWA
       LI   R1,LINBUF
       MOV  @NCOLS,R2
       SRL  R2,3
SCRBV1 MOVB @VDPRD,*R1+
       DEC  R2
       JOC  SCRBV1
       LI   R1,10
       MOV  @NROWS,R2
       MPY  R2,R1
       XOR  @UPDOWN,R2
       S    R2,R0
       SWPB R0
       MOVB R0,@VDPWA
       SWPB R0
       MOVB R0,@VDPWA
       LI   R1,LINBUF+10
       MOV  @NCOLS,R2
       SRL  R2,3
SCRBV2 MOVB @VDPRD,*R1+
       DEC  R2
       JOC  SCRBV2
       SWPB R0
       MOVB R0,@VDPWA
       SWPB R0
       ORI  R0,>4000
       MOVB R0,@VDPWA
       LI   R1,LINBUF
       MOVB *R1+,R2
       SZCB @LMSK0,R2
       LI   R3,LINBUF+10
       MOVB *R3+,R4
       SZCB @LMSK1,R4
       SOCB R2,R4
       MOVB R4,@VDPWD
       MOV  @NCOLS,R2
       SRL  R2,3
       DECT R2
       JLT  SCRBVR
       JEQ  SCRBV4
SCRBV3 MOVB *R1+,@VDPWD
       INC  R3
       DEC  R2
       JOC  SCRBV3
SCRBV4 MOVB *R1,R2
       SZCB @RMSK0,R2
       MOVB *R3,R4
       SZCB @RMSK1,R4
       SOCB R2,R4
       MOVB R4,@VDPWD
SCRBVR RT
*
* Blank color (blink) table of TEXT 80
*
SCRBLN SWPB @CTABLE+2
       MOVB @CTABLE+2,@VDPWA
       SWPB @CTABLE+2
       MOVB @CTABLE+2,@VDPWA
       SRL  R5,3
       A    @CTABLE,R5
       SWPB R5
       MOVB R5,@VDPWA
       SWPB R5
       MOVB R5,@VDPWA
       LI   R1,LINBUF
       MOV  @NCOLS,R2
       SRL  R2,3
SCRBL1 MOVB @VDPRD,*R1+
       DEC  R2
       JOC  SCRBL1
       SWPB R5
       MOVB R5,@VDPWA
       SWPB R5
       ORI  R5,>4000
       MOVB R5,@VDPWA
       LI   R1,LINBUF
       MOVB *R1+,R2
       SZCB @LMSK1,R2
       MOVB R2,@VDPWD
       MOV  @NCOLS,R2
       SRL  R2,3
       DECT R2
       JLT  SCRBLR
       JEQ  SCRBL3
       CLR  R3
SCRBL2 MOVB R3,@VDPWD
       INC  R1
       DEC  R2
       JOC  SCRBL2
SCRBL3 MOVB *R1,R2
       SZCB @RMSK1,R2
       MOVB R2,@VDPWD
SCRBLR RT
*
X906M2  RT
*
X906M4  MOV     @4(R13),R2
        MOV     R2,R8
        SLA     R8,8
        MOV     @6(R13),R6
        SLA     R6,3
        A       R6,R8                   * R8 top row
        MOV     R10,R7                  * R7 lines to blank
        MOV     @8(R13),R1
        MOV     R1,R4
        S       R2,R4
        INC     R4                      * R4 # of rows
        SLA     R1,8
        MOV     R1,R9
        A       R6,R9                   * R9 bottom row
        SLA     R10,8                   * R10 new increment
        A       R10,R8
        MOV     @10(R13),R5
        MOV     @12(R13),R2
        SRL     R6,3
        S       R6,R5
        INC     R5
        SLA     R5,3                    * R5 # of columns * 8
        C       R7,R4
        JHE     X906Z4
        MOV     R7,R7
        JNE     X906N4
X906Z4  MOV     R4,R7
        JMP     X906S4
X906N4  SWPB    @PTABLE+2
        MOVB    @PTABLE+2,@VDPWA
        SWPB    @PTABLE+2
        MOVB    @PTABLE+2,@VDPWA
        A       @PTABLE,R8
        SWPB    R8
        MOVB    R8,@VDPWA
        SWPB    R8
        ANDI    R8,>BFFF
        MOVB    R8,@VDPWA
        MOV     R5,R4
        LI      R1,LINBUF
X906O4  MOVB    @VDPRD,*R1+
        DEC     R4
        JNE     X906O4
        S       R10,R8
        SWPB    R8
        MOVB    R8,@VDPWA
        SWPB    R8
        ORI     R8,>4000
        MOVB    R8,@VDPWA
        MOV     R5,R4
        LI      R1,LINBUF
X906P4  MOVB    *R1+,@VDPWD
        DEC     R4
        JNE     X906P4
        A       R10,R8
        S       @PTABLE,R8
        SWPB    @CTABLE+2
        MOVB    @CTABLE+2,@VDPWA
        SWPB    @CTABLE+2
        MOVB    @CTABLE+2,@VDPWA
        A       @CTABLE,R8
        SWPB    R8
        MOVB    R8,@VDPWA
        SWPB    R8
        ANDI    R8,>BFFF
        MOVB    R8,@VDPWA
        MOV     R5,R4
        LI      R1,LINBUF
X906Q4  MOVB    @VDPRD,*R1+
        DEC     R4
        JNE     X906Q4
        S       R10,R8
        SWPB    R8
        MOVB    R8,@VDPWA
        SWPB    R8
        ORI     R8,>4000
        MOVB    R8,@VDPWA
        MOV     R5,R4
        LI      R1,LINBUF
X906R4  MOVB    *R1+,@VDPWD
        DEC     R4
        JNE     X906R4
        A       R10,R8
        S       @CTABLE,R8
        ANDI    R8,>BFFF
        C       R8,R9
        JEQ     X906S4
        AI      R8,256
        JMP     X906N4
X906S4  ANDI    R2,>FF
        LI      R3,CHDEFT
        SLA     R2,3
        A       R2,R3
        ORI     R9,>4000
X906T4  SWPB    @PTABLE+2
        MOVB    @PTABLE+2,@VDPWA
        SWPB    @PTABLE+2
        MOVB    @PTABLE+2,@VDPWA
        A       @PTABLE,R9
        SWPB    R9
        MOVB    R9,@VDPWA
        SWPB    R9
        MOVB    R9,@VDPWA
        MOV     R5,R4
        SRL     R4,3
        S       @PTABLE,R9
X906U4  MOV     R3,R2
        LI      R6,8
X906V4  MOVB    *R2+,@VDPWD
        DEC     R6
        JNE     X906V4
        DEC     R4
        JNE     X906U4
        CLR     R1
        MOVB    @14(R13),R1
        MOVB    @15(R13),R2
        SLA     R1,4
        SOCB    R2,R1
        SWPB    @CTABLE+2
        MOVB    @CTABLE+2,@VDPWA
        SWPB    @CTABLE+2
        MOVB    @CTABLE+2,@VDPWA
        A       @CTABLE,R9
        SWPB    R9
        MOVB    R9,@VDPWA
        SWPB    R9
        MOVB    R9,@VDPWA
        MOV     R5,R4
        S       @CTABLE,R9
X906W4  MOVB    R1,@VDPWD
        DEC     R4
        JNE     X906W4
        AI      R9,-256
        DEC     R7
        JNE     X906T4
        RT
*
X906M6  MOV     @4(R13),R3
        MOV     @6(R13),R2
        MOV     R2,R0
        MOV     R3,R1
        A       R10,R1                  * R10 increment, # of lines to blank
        MOV     @8(R13),R5
        MOV     R5,R9
        S       R3,R9                   * R9 # of rows
        INC     R9
        MOV     @10(R13),R4
        S       R0,R4
        S       R1,R5
        INC     R4
        INC     R5
        LI      R6,6
        MPY     R0,R6
        MOV     R7,R0
        A       @GRPHLF,R0
        SLA     R1,3
        A       @PAGEPX,R1
        LI      R6,6
        MPY     R2,R6
        MOV     R7,R2
        A       @GRPHLF,R2
        SLA     R3,3
        A       @PAGEPX,R3
        LI      R6,6
        MPY     R4,R6
        MOV     R7,R4
        SLA     R5,3
        CLR     R6
        LI      R7,>90
        LI      R12,>80
        MOV     @VIDMOD,R8
        CI      R8,7
        JEQ     X906Y6
        LI      R7,>D0
        LI      R12,>C0
X906Y6  C       R10,R9
        JHE     X906Z6
        MOV     R10,R10
        JNE     X906N6
X906Z6  MOV     R9,R10
        JMP     X906O6
X906N6  BLWP    @VDCMD2
X906O6  MOV     R4,R2
        CI      R8,6
        JEQ     X906P6
        CI      R8,8
        JEQ     X906P6
        CI      R8,7
        JEQ     X906Q6
        MOV     @14(R13),R4
        ANDI    R4,>FF
        JMP     X906R6
X906P6  MOV     @14(R13),R5             *
        ANDI    R5,>FF                  *
        MOV     R5,R4                   * Calculate color for
        SLA     R5,4                    * blank lines
        SOC     R5,R4                   *
        JMP     X906R6                  *
X906Q6  MOV     @14(R13),R5
        ANDI    R5,>3
        MOV     R5,R4
        SLA     R5,2
        SOC     R5,R4
        MOV     R4,R5
        SLA     R5,4
        SOC     R5,R4
X906R6  MOV     @8(R13),R1
        INC     R1
        SLA     R1,3
        A       @PAGEPX,R1
        SLA     R10,3
        MOV     R10,R3
        S       R10,R1                  * R1 starting line to blank
        MOV     R12,R5
        BLWP    @VDCMD1
        RT

