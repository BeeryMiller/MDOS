* FILENAME: VX-INTS
*
* VWTR
*
* R0h = VDP register number
* R0l = New value to put in register
*
CTABLE  DATA    0,0
PTABLE  DATA    0,0
SCRIMG  DATA    0,0
SPRATT  DATA    0,0
SPRPAT  DATA    0,0
SPRCOL  DATA    0,0
COLMSK  DATA    >0F0F,>8F8F,0,>0F0F
        DATA    >0F0F,>0F0F,>0F0F,>0303
        DATA    >0F0F,>FF0F
MSKTBL  BYTE    >0,>0,>0,>0
        BYTE    >3,>7,>0,>0
        BYTE    >0,>0,>0,>0
        BYTE    >0,>0,>0,>0
        BYTE    >0,>7F,>3,>0
        BYTE    >0,>7F,>3,>0
        BYTE    >1F,>0,>0,>7
        BYTE    >1F,>0,>0,>7
        BYTE    >1F,>0,>0,>7
        BYTE    >1F,>0,>0,>7
        EVEN
*
VWTR    DATA    LOWWP0,$+2
        MOV     *R13,R0
        SWPB    R0
        MOVB    R0,R2
        MOVB    R0,@VDPWA
        SWPB    R0
        MOVB    R0,R1
        ORI     R0,>8000
        MOVB    R0,@VDPWA
        SRL     R1,8
        MOV     R1,R0
        AI      R0,VIDREG
        MOVB    R2,*R0
        SRL     R2,8
        CI      R1,2
        JNE     VWTR1
        LI      R3,1024
        MOV     @VIDMOD,R7
        CI      R7,8
        JL      VWTR0
        CI      R7,9
        JH      VWTR0
        LI      R3,2048
VWTR0   LI      R7,SCRIMG
        JMP     VWTR7
VWTR1   CI      R1,3
        JNE     VWTR2
        LI      R3,64
        LI      R7,CTABLE
        JMP     VWTR7
VWTR2   CI      R1,10
        JNE     VWTR3
        ORI     R2,>8E00
        MOV     R2,@CTABLE+2
VWTR3   CI      R1,4
        JNE     VWTR4
        LI      R3,2048
        LI      R7,PTABLE
        JMP     VWTR7
VWTR4   CI      R1,5
        JNE     VWTR5
        LI      R3,128
        MOV     @VIDMOD,R7
        CI      R7,5                    * VIDEO MODE, funky bits
        JL      VWTR41
        ANDI    R2,>FFFC
VWTR41  LI      R7,SPRATT
        MPY     R2,R3
        MOV     R4,R5
        ANDI    R5,>3FFF
        MOV     R5,*R7
        MOV     @2(R7),R3
        ANDI    R3,>6
        SRL     R4,14
        ANDI    R4,>1
        SOC     R4,R3
        ORI     R3,>8E00
        MOV     R3,@2(R7)
        JMP     VWTR71
VWTR5   CI      R1,11
        JNE     VWTR6
        SLA     R2,1
        MOV     @SPRATT+2,R3
        ANDI    R3,>1
        SOC     R2,R3
        ORI     R3,>8E00
        MOV     R3,@SPRATT+2
        JMP     VWTR71
VWTR6   CI      R1,6
        JNE     VWTR8
        LI      R3,2048
        LI      R7,SPRPAT
        JMP     VWTR7
VWTR8   CI      R1,7
        JNE     VWTR9
*
        MOV     R2,R3
        ANDI    R3,>F
        SLA     R2,4
        ANDI    R2,>0F00
        SOC     R2,R3
        MOV     @VIDMOD,R2
        SLA     R2,1
        MOV     @COLMSK(R2),R2
        INV     R2
        SZC     R2,R3
        MOV     R3,@BRDCOL
        JMP     VWTR9
VWTR7   MOV     @VIDMOD,R12
        SLA     R12,2
        CI      R1,2
        JL      VWTR70
        CI      R1,5
        JH      VWTR70
        AI      R1,-2
        A       R12,R1
        SLA     R2,8
        SZCB    @MSKTBL(R1),R2
        SRL     R2,8
VWTR70  MPY     R2,R3
        MOV     R4,R5
        ANDI    R5,>3FFF
        MOV     R5,*R7
        SLA     R3,2
        SRL     R4,14
        SOC     R4,R3
        ORI     R3,>8E00
        MOV     R3,@2(R7)
VWTR71  MOV     @SPRATT+2,@SPRCOL+2
        MOV     @SPRATT,R9
        LI      R8,512
        S       R8,R9
        LI      R10,>4000
        COC     R10,R9
        JNE     VWTR72
        DEC     @SPRCOL+2
        ANDI    R9,>3FFF
VWTR72  MOV     R9,@SPRCOL
VWTR9   CLR     R2
        CLR     R1
VWTRA   MOVB    @VIDREG,R3
        ANDI    R3,>0E00
        CB      R3,@X900TB(R1)
        JNE     VWTRB
        MOVB    @VIDREG+1,R3
        ANDI    R3,>1800
        CB      R3,@X900TB+1(R1)
        JNE     VWTRB
        MOVB    @VIDREG+9,R3
        ANDI    R3,>8000
        CB      R3,@X900TB+2(R1)
        JNE     VWTRB
        MOV     R2,@VIDMOD
        MOV     R2,@VIDUSR              CP 94/03/02
        MOVB    @X900TB+3(R1),R3
        MOVB    @X900TB+4(R1),R4
        SRL     R3,8
        SRL     R4,8
        MOV     R3,@CHCOLS
        MOV     R4,@CHROWS
        MOV     R2,R5
        SLA     R5,2
        MOV     @X900TC(R5),@GXCOLS
        MOV     @X900TC+2(R5),@GXROWS
        CI      R2,10
        JNE     VWTRC
        LI      R2,1
        MOV     R2,@VIDMOD
        JMP     VWTRC
VWTRB   AI      R1,5
        INC     R2
        CI      R2,11
        JL      VWTRA
VWTRC   RTWP

* VDCMD1
*
* R0x = Registers #36, #37
* R1x = Registers #38, #39
* R2x = Registers #40, #41
* R3x = Registers #42, #43
* R4x = Registers #44, #45
* R5l = Register #46
*
VDCMD1  DATA    LOWWP0,$+2
VDCM11  LI      R0,>8F02                * Read status register #2
        SWPB    R0
        MOVB    R0,@VDPWA
        SWPB    R0
        MOVB    R0,@VDPWA
        MOVB    @VDPSTA,R1
        ANDI    R1,>0100
        JNE     VDCM11
        LI      R0,>2491                * Set multiple register start
        MOVB    R0,@VDPWA
        SWPB    R0
        MOVB    R0,@VDPWA
        LI      R10,11
        MOV     R13,R12
VDCM12  MOV     *R12+,R0
        SWPB    R0
        MOVB    R0,@VDPPT3
        DEC     R10
        JEQ     VDCM13
        SWPB    R0
        MOVB    R0,@VDPPT3
        DEC     R10
        JEQ     VDCM13
        JMP     VDCM12
VDCM13  RTWP

* VDCMD2
*
* R0x = Registers #32, #33
* R1x = Registers #34, #35
* R2x = Registers #36, #37
* R3x = Registers #38, #39
* R4x = Registers #40, #41
* R5x = Registers #42, #43
* R6x = Registers #44, #45
* R7l = Register #46
*
VDCMD2  DATA    LOWWP0,$+2
VDCM21  LI      R0,>8F02                * Read status register #2
        SWPB    R0
        MOVB    R0,@VDPWA
        SWPB    R0
        MOVB    R0,@VDPWA
        MOVB    @VDPSTA,R1
        ANDI    R1,>0100
        JNE     VDCM21
        LI      R0,>2091                * Set multiple register start
        MOVB    R0,@VDPWA
        SWPB    R0
        MOVB    R0,@VDPWA
        LI      R10,15
        MOV     R13,R12
VDCM22  MOV     *R12+,R0
        SWPB    R0
        MOVB    R0,@VDPPT3
        DEC     R10
        JEQ     VDCM23
        SWPB    R0
        MOVB    R0,@VDPPT3
        DEC     R10
        JEQ     VDCM23
        JMP     VDCM22
VDCM23  RTWP
*
*
* INT level 1 -- Sprite motion
*
SPRACT  DATA    0
SPRMTB  DATA    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
        DATA    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
        DATA    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
        DATA    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
*
VINT    LWPI    VIDINT
        LI      R12,>008F
        MOVB    R12,@VDPWA
        SWPB    R12
        MOVB    R12,@VDPWA
        MOVB    @VDPSTA,R12
*
        MOV     @SPRACT,R12
        JEQ     INT1W2
        LI      R2,SPRMTB
        LI      R3,SPRMTB
        SWPB    @SPRATT+2
        MOVB    @SPRATT+2,@VDPWA
        SWPB    @SPRATT+2
        MOVB    @SPRATT+2,@VDPWA
        MOV     @SPRATT,R8
INT1T2  CLR     R4
        MOVB    *R2+,R4
        CLR     R6
        MOVB    *R2+,6
        SRA     R4,4
        MOVB    *R2+,5
        SRA     R5,4
        A       R4,5
        MOVB    *R2+,7
        SRA     R6,4
        SRA     R7,4
        A       R6,7
        SWPB    R8
        MOVB    R8,@VDPWA
        SWPB    R8
        MOVB    R8,@VDPWA
        CLR     R4
        MOVB    @VDPRD,R4
        A       R5,R4
        CI      R4,>C0FF
        JLE     INT1V2
        CI      R4,>E000
        JH      INT1V2
        MOV     R5,5
        JGT     INT1U2
        JEQ     INT1V2        *
        AI      R4,>C000
INT1U2  AI      R4,>2000
INT1V2  CLR     R6
        MOVB    @VDPRD,6
        A       R7,R6
        SWPB    R8
        MOVB    R8,@VDPWA
        SWPB    R8
        ORI     R8,>4000
        MOVB    R8,@VDPWA
        MOVB    R4,@VDPWD
        MOVB    R6,@VDPWD
        INCT    R3
        SWPB    R5
        SRL     R5,4
        MOVB    R5,*R3+
        SWPB    R7
        SRL     R7,4
        MOVB    R7,*R3+
        ANDI    R8,>BFFF
        AI      R8,4
        DEC     R12
        JGT     INT1T2
INT1W2  LWPI    INTREG
*
* sound processor-PC 10/12/87
*
       MOV  @SOUNDC,R10
       JEQ  INT1W4
       DEC  R10
       MOV  R10,@SOUNDC
       JNE  INT1W4
*
       LI   R0,4
       LI   R1,SNDOFF
INT1W3 MOVB *R1+,@>F120
       DEC  R0
       JNE  INT1W3
*
* mouse processor-PC 10/12/87
*
INT1W4 MOVB @MSEFLG,@MSEFLG
       JEQ  INT1W5
       LI   R12,>038F
       MOVB R12,@VDPWA
       SWPB R12
       MOVB R12,@VDPWA
       INCT R12
       SWPB R12
       MOVB @VDPSTA,R10
       SRA  R10,8
       A    R10,@TRUEX
*
       MOVB R12,@VDPWA
       SWPB R12
       MOVB R12,@VDPWA
       INCT R12
       SWPB R12
       MOVB @VDPSTA,R10
       SRA  R10,8
       A    R10,@TRUEY
*
       LI   R12,>008F
       MOVB R12,@VDPWA
       SWPB R12
       MOVB R12,@VDPWA
INT1W5 RT
*
SOUNDC DATA 0                 number of jiffys of sound left
TRUEX  DATA 0                 mousex
TRUEY  DATA 0                 mousey
MSEFLG DATA 0
SNDOFF BYTE >9F,>BF,>DF,>FF
