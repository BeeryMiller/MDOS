* File: HD\EQUATES
*
*           UPDATES  3/25/83   CLOCK OPTION
*                    4/14/83   DSK1/DSK FEATURE
*                    5/14/83   99/8 COMPATABLE
*                    9/87      99/4A AND 9640 COMPATABLE
*                    7/88      9640/MDOS
*
*       ADDED VARIABLES IN LINES  11/21/88   305,306 309,310
*
* 6.27.2021 Removed REF/DEF, moved to HD\WINDS1-S
*           This file is now copied by both HD\COPY and SCSI2\SCSI_S
*           Added DEF for scsmap command
*
;;;    DEF  CYLPLT       ;6.27.2021, needed for CLI\NEWCMDS :scsmap command
;;                       ;defined in WINDS1-S otherwise, duplicate def.

CRDRAM EQU  >9000        OFFSET OF RAM ON CARD
*
DPAG5  EQU  P_HFC1
DPAG6  EQU  P_HFC2

*
*  9640 HARDWARE EQUATES
*
MAP960 EQU  >F110
MAP962 EQU  >F111
MAP964 EQU  >F112
MAP966 EQU  >F113
MAP968 EQU  >F114
MAP96A EQU  >F115
MAP96C EQU  >F116
MAP96E EQU  >F117
*
*MEMORY DEFINITIONS
VWA    EQU  >F102        VDP WRITE ADDRESS
VRD    EQU  >F100        VDP READ DATA
VWD    EQU  >F100        VDP WRITE DATA
*R13 CONTAINS THE GROM WRITE ADDRESS
*R14 CONTAINS THE SYSTEM FLAGS
*R15 CONTAINS THE VDP WRITE ADDRESS
CHAT   EQU  >8342
KSCANG EQU  >000E        KEY SCAN ROUTINE
PAD    EQU  >8300
* NOW FOR CRU DEFS  FIRST OUTPUTS
DSREN  EQU  0
RSETHD EQU  1
MOTON  EQU  2         CONTROLS ALSO CD0 OF 9216 CHIP
ROM1   EQU  3         CONTROLS ALSO CD1 OF 9216 CHIP
ROM2   EQU  4         CONTROLS ALSO CRU INPUT SELECT BITS
*
* NOW FOR THE NUMBER OF RETRIES FOR READS
*
RETRY  EQU  5
*
* NOW FOR CRU INPUTS
*
MTO    EQU  2
*
FBUFSZ EQU  518
*
*
*NOW FOR DIRECTORY BLOCK DESCRIPTORS
DIRNAM EQU  0            DIRECTORY NAME 10 CHARS
TOTAU  EQU  >A           TOTAL NUMBER OF AU'S ON DISK
SECPTR EQU  >C           NIBLE SECTORS/AU-1, NEXT NIBLE WRITE PRECOMP
DIR    EQU  >D           NAME "DIR"
*                FOR MAIN DIRECTORY >D=# OF DIR ENTRIES*64
*                                   >E=STEP RATE OF DRIVE
*                                   >F=REDUCED WRITE CURRENT CYL*8
WINTYP EQU  >10          MEANIng  xxxx                sectors/AU base 0
*                                      xxxx           # of heads base 1
*                                           x         UNUSED
*                                            xxx xxxx write precomp cyl*16
DATCRD EQU  >12          DATE AND TIME OF CREATION
DATLUD EQU  >14          DATE AND TIME OF CREATION
NUMFIL EQU  >16          NUMBER OF FILES IN DIRECTORY
NUMDIR EQU  >17          NUMBER OF SUB DIRECTORIES
FBKPTR EQU  >18          POINTER TO ASSOCIATED FILE POINTER
PARDIR EQU  >1A          POINTER TO PARENT DIRECTORY
DIRPTS EQU  >1C          POINTERS TO DIRECTORIES
*
* NOW FOR ADDITIONS TO THE ABOVE FOR FLOPPY
*
NTRKF  EQU  17
FDIR1  EQU  20
FDIR2  EQU  32
FDIR3  EQU  44
BITMAP EQU  56
*
*NOW FOR FILE BLOCK DESCRIPTORS
*
FINAM  EQU  0            FILE NAME 10 CHARS
XRECLN EQU  >A           EXTENded record length
FSTATF EQU  >C           FILE status flags
*             76543210
*             | ||| |\-  0=DATA FILE    1=PROG FILE
*             | ||| \--  0=ASCII DATA   1=INTERNAL OR PGM FILE
*             | ||\----  0=NOT PROTECT  1=PROTECTED
*             | |\-----  0=NO CHANGE SINCE LAST BACKUP 1=CHANGED
*             | \------  0=NORMAL FILE  1="DSK1" TYPE FILE
*             \--------  0=FIXED RECORD LEN 1=VARIABLE REC LEN
RECPAU EQU  >D           RECORds per AU
LEV2RC EQU  >E           MID&LSB OF level 2 records
*
EOFOST EQU  >10          END Of file offset
RECLEN EQU  >11          LOGICal record length if < 256
LEV3RC EQU  >12          IF FIXED THEN # OF RECORDS
*                        IF VARIABLE THEN MID&LSB OF ACTUALLY USED AU'S
DATCRF EQU  >14          CREATion date
DATLUF EQU  >18          LAST updated
FI     EQU  >1C          CHARACTERS 'FI'
PTRPRE EQU  >1E          POINTER TO PREVIOUS FDB  0 IF NONE
PTRNXT EQU  >20          POINTER TO NEXT 0 IF NONE
*
AUPRFD EQU  >22          # OF AU's in previous FCB's
LEV3PT EQU  >22          # OF AU'S IN PREVIOUS FCB'S
AUTSFD EQU  >22
*                        # OF HIGHEST AU WRITTEN FOR FIXED REC'S IN TOP FCB
PARFPT EQU  >24          POINTER TO PARENT DIR OF FILE PTRS
NIBLES EQU  >26          IN ORDER MSN TO LSN
*                        MSB LEVEL 2 RECORDS
*                        MSB ACTUALLY USED IN VARI
*                        PTRPRE (PREVIOUS FDR)
*                        PTRNXT (NEXT FDR)
EFOSMS EQU  >0F00        MASK FOR EOFOST SECTOR IN AU
PTPRMS EQU  >00F0        MASK FOR POINTER TO PREVIOUS FDR
PTNXMS EQU  >000F        MASK FOR POINTER TO NEXT FDR
*
SEPTRS EQU  >28          FIRST SET OF DATA SECTOR POINTERS
*
*   NOW FOR FLOPPY EXTENSIONS
*
CLUSTR EQU  28
*
*FILE NAME / POINTER LAYOUT
FNSTAT EQU  0            0=UNUSED, <>0 THEN USED
FNDRID EQU  1
FNLOCF EQU  >2           PHYSICAL LOCATION OF FDR/DDR ON DISK
FNLOCD EQU  >4           PHYSICAL LOCATION OF DATA BUF ON DISK
FNLOF2 EQU  >6           MID&LSB WHERE POINTER IS
FNSEC0 EQU  >8           SCINAU FDR / SCINAU DATA
FNLROF EQU  >9           LOGICAL RECORD OFFSET
FNLOFM EQU  >A           MSB WHERE POINTER IS
WRTFLG EQU  >B  WRT/HSA  FLAG USED TO DETERMINE IF FILE WRITTEN TO
HSALMS EQU  >B           MSB HIGHEST SECTOR ALLOCATED
FNVNAU EQU  >C           HIGHEST RECORD USED IN FIXED
*                        MID&LSB USED IN VARIABLE
FNVSOF EQU  >E           MSB USED IN VARIABLE FILE
FNVROF EQU  >F           HIGHEST BYTE IN SECTOR
*              THE ABOVE WORD USED TO DETERMINE IF
*                MAIN=0 OR SUB DIR<>0 WHEN READ DIRECTORY
HSALML EQU  >10          MID&LSB OF HIGHEST SECTOR ALLOCATED
LSTUP1 EQU  >12          DATE AND TIME LAST UPDATE
LSTUP2 EQU  >14
FOWFOR EQU  >16          FLOPPY FORMAT=0, WINCHESTER<>0
INDPTR EQU  >18          POINTER TO THE INDEX SECTOR FOR THIS
PARPTR EQU  >1A          PARENT POINTER (TO FDR)
SIBPTR EQU  >1C          SIBLIN POINTER (TO DATA)
IOOFST EQU  >1E          I/O OFFSET FOR WRITE DIRECT, ETC.
PATNAM EQU  >20          PATHNAME LENGTH BYTE & 40 CHAR PATHNAME
FIRBUF EQU  PATNAM+42    FIRST ASSOCIATED BUFFER
SECBUF EQU  FIRBUF+260   SECOND ASSOCIATED BUFFER
WBUFLN EQU  SECBUF+260   LENGTH OF WINCHESTER BUFFER
*
*MEMORY LAYOUT OF 4-K RAM
* NOW REGISTERS AND MEMORY LAYOUT
*
PAGRT1 EQU  CRDRAM
WRKREG EQU  PAGRT1+2     MY WORKSPACE REGISTERS
MYR0   EQU  WRKREG
MYR1   EQU  MYR0+2
MYR2   EQU  MYR1+2
MYR3   EQU  MYR2+2
MYR4   EQU  MYR3+2
MYR5   EQU  MYR4+2
MYR6   EQU  MYR5+2
MYR7   EQU  MYR6+2       FLAG FOR FIRST DISK ACCESS, 0=NO,1=YES
MYR8   EQU  MYR7+2       FLAG FOR SECOND DISK RETRY, 0=NO,1=YES
MYR9   EQU  MYR8+2
MYR10  EQU  MYR9+2
MYR11  EQU  MYR10+2
MYR12  EQU  MYR11+2
PAGRT2 EQU  WRKREG+32
WRKRG2 EQU  PAGRT2+2
PAGRT3 EQU  WRKRG2+32         THE GETVIB WORKSPACE
GTVREG EQU  PAGRT3+2
*
COMBUF EQU  GTVREG+32
TIMCM1 EQU  COMBUF+>12   COMPRESSED TIME MSW
TIMCM2 EQU  TIMCM1+2     COMPRESSED TIME LSW
VOLUME EQU  TIMCM2+2     0 IF DRIVE KNOWN <> 0 IF ACCESS BY VOLUME NAME
DRIVID EQU  VOLUME+1     DRIVE ID
VSERCH EQU  DRIVID+1     FLAG FOR DSK OR WDS VOLUME SEARCH
STSRCH EQU  VSERCH+2
NOPTRS EQU  STSRCH+2     NUMBER OF DIRECTORY & FILE POINTERS DCB
STRTSR EQU  NOPTRS+2     MEMORY TO SAVE STARTING POINT OF SECTOR SEARCH
DSKDIR EQU  STRTSR+2     SET IF DIRECTORY DSK1 OR DSK TRY
DSONWD EQU  DSKDIR+2     SET IF DSK1 ON HD
DSONTS EQU  DSONWD+2     SET IF DSK1 TRIED BEFORE
DIRAUN EQU  DSONTS+2          yalfu---gawd, equates suck...use DORG!!!
ANDIR  EQU  DIRAUN+2     PARENT DIR LOC ON DISK
MAXDRV EQU  ANDIR+2      MAX NUMBER OF FLOPPIES FOR VOLUME SEARCH
IOTOFH EQU  MAXDRV+2     FLAG FOR I/O ROUTINE I/O TO DSK1 ON HD
TIMER  EQU  IOTOFH+2     FFFF IF TIME I/O,0 IF FILE I/O
DIRECT EQU  TIMER+2      0 IF USE SECTOR IN AU, FFFF IGNORE
IOOSET EQU  DIRECT+2     I/O OFFSET
SAVAUN EQU  IOOSET+2     SAVED AU FOR DATA SECTOR
SAVSCA EQU  SAVAUN+2     SAVED SCINAU FOR DATA SECTOR
SECIND EQU  SAVSCA+2     OFFSET INTO SECTOR FOR FIXED RECORD
SAVR6S EQU  SECIND+2     SAVE INDEX INTO AU
OLDVCF EQU  SAVR6S+2     FLAG TO STATE IF OLD WDS CPU RAM I/O
SAVPG0 EQU  OLDVCF+2     SAVE PAGE
WAITD1 EQU  SAVPG0+2     FLAG TO DETERMINE IF DRIVE 1 ACCESSED BEFORE
ERRSMD EQU  WAITD1+2     ERROR IN I/O TO GIVE A HARD RESTORE OF HD
DIGFLG EQU  ERRSMD+2     FLAG FOR READING RECORD LENGTH
DATMFG EQU  DIGFLG+2     FLAG 0=WRITE REC LEN, 0<>WRITE DATA TO RECORD
*                                         HARD
CYLPLT EQU  DATMFG+2     DISK PARMS | # OF AU'S                             |
*                                   | NUMBER OF DIR AU'S / # OF HEADS       |
*                                   | REDUCED WRITE CUR  / # OF SECT/TRK    |
*                                   | WINTYP (AS ABOVE)                     |
*
FLPPLT EQU CYLPLT+24     FLOPPY PARMS HERE
*                                         FLOPPY
*                                   | # OF SECTORS     |
*                                   | # OF TKS THIS FLP|
*                                   | SECT/TRK|DENSITY |
*                                   | CURRENT PHY TRK  |
TRKTF  EQU  2
SCPT   EQU  4
DENSIT EQU  5
CURTRK EQU  6
*
FLPPRM EQU  11*8+CYLPLT
*                                   |   # OF TRACKS    |
*                                   |STEP RATE|   FF=HD|
DIRIO  EQU  4*4+FLPPRM   FLAG FOR FILE(0)/DIR(FFFF)
GPLIO  EQU  DIRIO+2      FLAG FOR GPL I/O(FFFF) OF DSR(0)
DSECIO EQU  GPLIO+2      FLAG FOR DIRECT SECTOR I/O (ERROR CODE IN I/O)
PNAUN  EQU  DSECIO+2     AU # OF PATHNAME DIR ON DISK
PNLENG EQU  PNAUN+2      PATHNAME LENGTH
*
RAMBUF EQU  PNAUN+12
AUNUM  EQU  RAMBUF+2
SCINAU EQU  AUNUM+2
RAUNUM EQU  SCINAU+2     THE AU NUM THE SOFTWARE THIKS IT WANTS(DSK1ONHD)
FLAGRF EQU  RAUNUM+2     FLAG FOR READING FDR'S TO GET DSK1ONHD
REALFD EQU  FLAGRF+2     FLAG SET IF FLOPPY I/O, IF 0 THEN WDS I/O
NTRKIO EQU  REALFD+2
STRATE EQU  NTRKIO+2     STEP RATE
FPSELC EQU  STRATE+2     FLOPPY AND WINCHESTER SELECT
FAKIO0 EQU  FPSELC+2     FLAG FOR FAKE READ OF SECTOR 0
SAVCRU EQU  FAKIO0+2     TO SAVE THE CRU LOCATION DURING KEYSCAN
SV8374 EQU  SAVCRU+2     SAVE >8374 DURING KEYSCAN
MYUADL EQU  SV8374+2     USABLE ADDRESS
MYUADH EQU  MYUADL+2     USABLE ADDRESS
* THE NEXT 2 WORDS ARE THE REQUESTED SECTOR NUMBER IN GETAU
SAVR5  EQU  MYUADH+2
SAVR6  EQU  SAVR5+2
FR5SAV EQU  SAVR6+2
FR1SAV EQU  FR5SAV+2
SAVSR8 EQU  FR1SAV+2     VALUE OF LOGICAL TRACK DURING SEEK CMD
MTOSTS EQU  SAVSR8+2     MOTOR ON STATUS OF FLP DRV IN SECTOR I/O
RESRTN EQU  MTOSTS+2     RETURN FROM RESTORE COMMAND
CLUSNO EQU  RESRTN+2
NEWAU  EQU  CLUSNO+2     GIVES THE # OF AU'S ADDED IN GETAU
CYLDER EQU  NEWAU+2      FOR I/O THE BITS USED FOR RWC, AND WPR
RTRYIO EQU  CYLDER+2     FLAG TO RETRY IF WINCHESTER THE READ AGAIN
EMDKSZ EQU  RTRYIO+2     SIZE IN SECTORS OF THE EM DISK FILE
VIBCHG EQU  EMDKSZ+2     IF 0 VIB DID NOT CHANGE
VIBID  EQU  VIBCHG+1     DRIVE NO OF VIB
GTSBUF EQU  VIBID+1      BUFFER FOR USED SECTOR BITS
EMDKCB EQU  GTSBUF+260   CONTROL BLOCK FOR THE DK1 FCB
DK1FCB EQU  EMDKCB+>20+42   BUFFER FOR FDR FOR FLOPPY
FDKVIB EQU  DK1FCB+260   BUFFER FOR FLOPPY VIB
SC0BUF EQU  FDKVIB+260   BUFFER FOR FAKE READ OF SECTOR 0
*
* I am putting these next addresses either on the HFDC itself, or
* on the SCSI buffer segment (at >A000) with the above addresses
* on the SCSI card itself.
* I won't be using these symbols, but I will be using the
FSTBUF EQU  SC0BUF+260->1000 START OF I/O BUFFERS
WBUFEN EQU  WBUFLN*11+FSTBUF
* SMC HDC9234 controller chip equates for registers.
CMDREG EQU  >0FD6+CRDRAM->1000
STSREG EQU  >0FD4+CRDRAM->1000
DATREG EQU  >0FD2+CRDRAM->1000
REDREG EQU  >0FD0+CRDRAM->1000
*
* Real Time Clock on the Geneve (in native 9640 mode only)
CNTREG EQU  >F130
UNSEC  EQU  CNTREG+2
TENSEC EQU  UNSEC+1
UNMIN  EQU  TENSEC+1
TENMIN EQU  UNMIN+1
UNHR   EQU  TENMIN+1
TENHR  EQU  UNHR+1
UNDAY  EQU  TENHR+1
TENDAY EQU  UNDAY+1
UNMON  EQU  TENDAY+1
TENMON EQU  UNMON+1
UNYR   EQU  TENMON+1
TENYR  EQU  UNYR+1
CKSTRG EQU  CNTREG+>F    CLOCK SETTING REGISTER
*
* end of file HD.EQUATES
