*  ROUTINE TO GET PROPER NUMBER OF AU'S AS DEFINED IN CALLERS R4,R5
*  THIS IS A BASE 0 ROUTINE (IE PASSING 0 WILL GET THE FIRST SECTOR)
*  FCB IN SIBLIN,DATABUF IN PARENT
*  DON'T HAVE TO BE AT TOP OF FCB BUT ALL PREVIOUS FCB'S MUST BE FILLED
*  ALSO MAY NOT RETURN AT TOP LEVEL
*      R0   ERROR RETURN SECTOR I/O
*           SECTOR GOTTEN ON GETSEC
*      R1
*      R2
*      R3   POINTER TO WINCHESTER BUFFER AREA
*      R4
*      R5   INPUT=MSW #PHYS SECTORS TO NO. OF AU'S
*      R6   INPUT=LSW #PHYS SECTORS TO SECTOR NUMBER IN AU
*      R7
*      R8   FREE BUFFER POINTER
*      R9   FDR POINTER
*      R10
*      R11
*      R12
*
GETAUS DATA WRKRG2,GETUAS
GETAUU DATA WRKRG2,GETUAU
*
GETUAU MOV  @6(R13),R3        GET BUFFER POINTER
       MOV  @FNLOF2(R3),R6    SECTOR NUMBER TO GET
       MOV  @FNLOFM(R3),R5
       SRL  R5,8
       JMP  GETUAZ
*
GETUAS MOV  @8(R13),R5        THESE ARE THE SECTORS TO GET
       MOV  @10(R13),R6
*GETUAZ CLR  @NEWAU
GETUAZ MOV  R5,@SAVR5
       MOV  R6,@SAVR6
       MOV  @16(R13),R8       BUFFER POINTERS
       MOV  @18(R13),R9
       MOV  R9,@RAMBUF
       MOV  R9,R7
       AI   R7,256
       MOV  @6(R13),R3
       MOV  @VOLUME,R10       USE R4 AND R10 FOR POINTER TO BUFFER
       SLA  R10,3             ASSUME WINCHESTER
       MOV  @6+CYLPLT-8(R10),R4
       SRL  R4,12
       INC  R4
       DIV  R4,R5              GET PHYSICAL AU (R5) AND SECTOR IN AU (R6)
       JNO  GETPP1            NO OVERFLOW
GETOV9 LI   R0,>8000          OUT OF SPACE
GETER  MOV  R0,*R13
       MOV  @AUPRFD(R3),R5
       MOV  @PTRPRE(R3),R6
       JEQ  GETER0
       A    @LEV2RC(R3),R5
GETER0 MPY  R4,R5
*      MOV  R6,@HSALML(R3)
*      B    @GETRE3
       B    @GETRE1
*
GETPP1 C    R5,@CYLPLT-8(R10)  TEST IF BIGGER THAN THE DISK
       JHE  GETOV9             TOO BIG
       MOV  R6,@SAVR6S        SAVE R6 FOR LATER USE
       INC  R5                NOW MAKE BASE 1
* ARE WE AT THE TOP FDR
GETAP1 MOV  @PTRPRE(R9),R0
       JEQ  GETAU1            NO, NOT AT TOP
* TO BE HERE, NOT AT TOP LEVEL SO COMPARE
GETAP2 S    @LEV2RC(R9),R5    IS THE AU IN A PREVIOUS FDR?
       JEQ  GETAUP            YES
       JOC  GETAU1            NO
* TO BE HERE, DESIRED AU IS IN A PREVIOUS FDR, SO GET IT
GETAUP A    @LEV2RC(R9),R5     RESTORE R5
       MOV  @NIBLES(R9),R10   GET SECTOR NUMBER
       ANDI R10,PTPRMS
       SRL  R10,4
       MOV  R10,@SCINAU       SET SECTOR IN AU
       MOV  @PTRPRE(R9),@AUNUM
       MOV  R9,@RAMBUF
       BLWP @RSECTR
       JEQ  GETER             READ SECTOR ERROR
       JMP  GETAP1            CONTINUE UNTIL AT PROPER FDR
*
* NOW SEE IF THERE IS ENOUGH IN THIS FCB
GETAU1 S    @AUTSFD(R9),R5    NO, SO R5 LEFT TO GO
       JEQ  GETAUF            YES
       JNC  GETAUF            YES
* NEED R5 MORE AU'S, SO TEST IF SIBLIN EXISTS
       MOV  @PTRNXT(R9),@AUNUM IS THERE A NEXT FDR IN THIS AU?
       JEQ  GETAU2            NONE EXIST
       MOV  @NIBLES(R9),R10   YES, SO GET THIS ONE
       ANDI R10,PTNXMS        GET
       MOV  R10,@SCINAU
       BLWP @RSECTR
       JEQ  GETER             READ ERROR
       JMP  GETAU1
*
GETAU2
*
*  TO BE HERE, NOT ENOUGH AU'S ALLOCATED, AND NO MORE SIBLING'S
*  FIRST TEST IF ANY MORE POINTERS CAN BE PUT IN THIS FCB
*
       MOV  @VOLUME,R10
       SLA  R10,3             offset into drive parms
       MOVB @3+CYLPLT-8(R10),R0  dir aus reserved / 64
       SRL  R0,8
       SLA  R0,6              AU # to start search for file allocation
*
       MOV  R9,R10
       AI   R10,SEPTRS
       CLR  R2                FAKE START OF 0
       MOV  *R10+,R11         FIRST TIME THROUGH ONLY
       JNE  GETA3A
       DECT R10
       JMP  GETA5B
*
GETAU3 MOV  *R10+,R11
       JEQ  GETAU4
GETA3A MOV  *R10+,R0          MOVE LAST PTR
       C    R10,R7             TEST STOPPING CRITERION
       JL   GETAU3
*  TO BE HERE, AT END, SO SEE IF THERE CAN BE AN EXTENSION WITH THE
*  LAST PTR PAIR
       INCT R10
GETAU4 DECT R10
GETAU5 INC  R0                TRY TO GET NEXT CONTIGUOUS SECTOR
       MOV  R0,R2             SAVE STARTING SECTOR
GETA5B MOV  R5,R6             SAVE NUMBER OF SECTORS DESIRED
       BLWP @GETSEC
       MOV  R0,R0             ERROR?
       JNE  GETER
GETA5C MOV  R1,R0             SET R0 FOR NEXT TIME AROUND
       A    R5,R0
       DEC  R0
       C    R1,R2             TEST IF CONTIGUOUS
       JNE  GETAU6            JUMP IF NOT
       DECT R10
GETAU8 MOV  R0,*R10+
       A    R5,@AUTSFD(R9)
*      A    R5,@NEWAU
       MOV  R5,R1
       MOV  R6,R5
       S    R1,R5
       JNE  GETAU5
       JMP  GETAF1            SECTOR IN R0
*
GETAUF
* NOW WE KNOW THAT THIS FCB CONTAINS THE PROPER PHYSICAL SECTOR
* R5 IS NUMBERED SUCH THAT 1 IS THE FIRST SECTOR ETC
       A    @AUTSFD(R9),R5
       AI   R9,SEPTRS         GET TO TOP SET OF PTRS.
GETAF4 MOV  *R9+,R0           PUT IN R0
       MOV  *R9+,R11          IS IT THE START POINTER
       DEC  R0                BRANCH IF DONE
       S    R0,R11            TEST IF AT END OF PTR PAIR
       S    R11,R5
       JEQ  GETAF2
       JOC  GETAF4
GETAF2 A    R11,R5            GET NEXT POINTER SET
       A    R5,R0
GETAF1 MOV  R0,@AUNUM
       CLR  R0
       MOV  R0,*R13           NO ERROR
       MOV  @SAVR6S,@SCINAU
       MOV  @SAVR5,R5
       MOV  @SAVR6,R6
       INC  R6
       JNC  GETRE1
       INC  R5
* NOW SEE IF THIS IS THE HIGHEST ALLOCATION SO FAR
GETRE1 MOVB @HSALMS(R3),R7
       SWPB R7
       ANDI R7,>000F
       C    R7,R5
       JH   GETRE2
       JL   GETRE3
       C    @HSALML(R3),R6
       JHE  GETRE2
GETRE3 MOV  R6,@HSALML(R3)
       SWPB R5
*
*      MOV  @NEWAU,R5         RESTORE RETURN
*      JEQ  GETRE2
*      MOV  @SAVR5,R5
*      INC  @SAVR6
*      JNC  GETRE1
*      INC  R5
*GETRE1 MOV  @SAVR6,@HSALML(R3)
*GETRE3 SLA  R5,8
       SZCB @CBH0F,@HSALMS(R3)
       SOCB R5,@HSALMS(R3)
GETRE2 RTWP
*
GETAU6
*  NOT CONTIGUOUS, SO TEST IF A NEW FCB MUST BE STARTED
       C    R7,R10            TEST IF THERE
       JEQ  GETAU7            BRANCH IF THERE
*  OTHERWISE START NEW SET OF SECTOR POINTERS
GETA6A MOV  R1,*R10+
       JMP  GETAU8
*
GETAU7
*  MUST SET UP ANOTHER FDR
*  WE USE THE FOLLOWING DECISION RULES:
*  FIRST TRY TO SET UP AN FCB IN ANOTHER SECTOR OF
*        THIS AU
*  IF NOT, THEN USE THE SECTOR GOTTEN WITH GETSEC IN R0
*  IS THERE ANOTHER SECTOR IN THIS AU FOR AN FDR?
       MOVB @FNSEC0(R3),R10
       SRL  R10,12
       C    R10,R4
       JHE  GETA02            BRANCH IF CAN'T GET ANOTHER SECTOR IN AU
* TO BE HERE, THERE IS ANOTHER SECTOR IN THIS AU FOR THE FDR
* SET UP POINTER TO NEXT, FIRST THE SECTOR IN AU
       INC  R10
       SOC  R10,@NIBLES(R9)   SET SECTOR OFFSET
       DEC  R10
       MOV  @FNLOCF(R3),@PTRNXT(R9)
GETA03 MOV  @FNLOCF(R3),@AUNUM
       MOV  R10,@SCINAU
       BLWP @WSECTR
       JNE  GETA04
       B    @GETER             ERROR
**
* NOW SET UP NEW FCB
*
GETA04 MOV  @PTRNXT(R9),@FNLOCF(R3) SET AU
       CLR  R11
       MOVB @NIBLES+1(R9),R11
       SLA  R11,4
       MOVB R11,@NIBLES+1(R9)      SET PREVIOUS NIBLE AND CLEAR NEXT NIBLE
       SZCB @CBHF0,@FNSEC0(R3)
       SOCB R11,@FNSEC0(R3)
       MOV  @AUNUM,@PTRPRE(R9)     SET PREVIOUS AU POINTER
       CLR  @PTRNXT(R9)            CLR NEXT FDR POINTER
       MOV  @PTRPRE(R9),R0
       JNE  GETA05
       CLR  @LEV2RC(R9)
GETA05 A    @AUTSFD(R9),@LEV2RC(R9)
       CLR  @AUTSFD(R9)
       MOV  R9,R10
       AI   R10,SEPTRS
       CLR  R2
       MOV  R5,R5
       JEQ  GETA07
       B    @GETA5C
*
GETA07 MOV  R1,R0
       B    @GETA5B
*
GETA02 MOV  R1,@PTRNXT(R9)
       INC  R1
       DEC  R5
*      CLR  R10
       JMP  GETA03
