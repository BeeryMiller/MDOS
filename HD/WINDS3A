; WINDS3A-S
;
; 11.18.2023 Split file into A/B parts
; 11.18.2023 Attempt to fix SAVE disk full error. See S11 (~340)
;            Save error, clear *R3 (filename/buffer) to release file lock
;            Reduce file size to 1 as an indicator. Maybe enhance later.
;      NOTE: BADOPC clears the filename. Other traps may need to be rerouted
;            here to release files.
;
;--------------------------------------------------------------------------

* test if OPEN APPEND with fixed type file (not allowed)
OPEN   COC  @H0006,R6         append?
       JNE  LOAD              no
       CZC  @H0010,R6         yes, so is it fixed?
       JNE  LOAD              no
BAD022 LI   R0,>4000          illegal open mode
RES0   B    @BADOP
*
* FIRST CHECK TO SEE IF PATH NAME ALREADY OPEN
BREAD
BWRITE
PROTCT
RENAME
LOAD
SAVE
       CI   R2,WBUFEN     TEST IF FOUND
       JNE  BAD022        BRANCH IF FILE ALREADY OPEN
* NOW ZERO OUT FILE NAME BUFFER
ISNOPN CLR  @DIRAUN           LOCATION OF CURRENT DIR ON DISK
       CLR  @ANDIR            LOCATION OF PARENT DIR ON DISK
       MOV  R3,R5
       CLR  *R5+              ZERO OUT: USED BUFFER, DRIVE NUM
       CLR  *R5+              ZERO OUT: FDR AU NUMBER
       CLR  *R5+              ZERO OUT: DDR AU NUMBER
       CLR  *R5+              ZERO OUT: MID AND LSB WHERE DATA POINTER IS
       CLR  *R5+              ZERO OUT: SCINAU FDR,DATA AND LOCGICAL REC OFF
       CLR  *R5+              ZERO OUT: MSB WHERE DAT POINTER IS,MSB SECTOR ALLC
       CLR  *R5+       ZERO OUT: HIGHEST SECTOR USED IN FIXED/VARIABLE (MID+LSB)
       CLR  *R5+             ZERO OUT: MSB USED IN VARIABLEL,HIGHEST BYTE IN SEC
       CLR  *R5+             ZERO OUT: MID&LSB OF HIGHEST SECTOR ALLOCATED
* NOW LOAD THE PATHNAME IN THE BUFFER
       LI   R4,OPTLN
       MOVB *R4+,R7
       MOV  R3,R5
       AI   R5,PATNAM
       MOVB R7,*R5+
       SRL  R7,8
MPTNAM MOVB *R4+,*R5+
       DEC  R7
       JNE  MPTNAM

* NOW DO PATHNAME SEARCH
       MOV  @SCNOFF,R4        GET PATHNAME LENGTH (by getting scnoff and pathnm)
       SZCB R4,R4             zero out screen offset
       MOV  @STSRCH,R5        HERE IS WHERE TO START THE SEARCH
*NOW THAT PATHNAME MOVED, WE KNOW THE FOLLOWING
*R4=#OF CHARS IN PATH NAME
*R3=FILE NAME BUFFER LOCATION POINTER
*R5=PTR TO CHAR AFTER FIRST DPT
*NOW START PARSING PATHNAME AND FINDING IF DIRIFILE EXISTS
       S    @VSERCH,R4        SUBTRACT IF AMOUNT ALREADY PARSED
       JEQ  BAD022       TEST LENGTH BRANCH IF ERROR
       DEC  R4           SUBTRACT 1 FROM CHARS LEFT (for dpt)
*NOW MOVE IN VOLUME DIR BLOCK UNLESS VOLUME NAME ACCESS
       CLR  @AUNUM       READ DIRECTORY BLOCK
* NOW ARE WE SUPPOSED TO TEST IF VOLUME NAME ACCESS
       MOVB @VOLUME,R2
       JNE  NAMESR
**
*
*  OTHERWISE SET UP ACCESS TI DISK DRIVE DIR
*
*OTHERWISE SET UP ACCESS TO DISK DRIVE DIR
GP2707 CLR  @DIRAUN
       CLR  @ANDIR
       MOV  R8,@RAMBUF        SET UP BUFFER PTR FOR DATA
       BLWP @RSECDR      GO TO READ DIR SECTOR TO BUF
       JNE  DSNM00       GOOD READ SECTOR
       ABS  @DSKDIR      IS IT DSK DIR?
       JEQ  RES0         NO, SO REAL ERROR
       JMP  FLPRTN
*
DSNM00 MOV  @AUNUM,@DIRAUN SAVE FOR LATER USE
       MOV  @FBKPTR(R8),@AUNUM
* NOW TEST FOR DSK OR DSK1 DIR ACCESS
       ABS  @DSKDIR
       JNE  DKET         BRANCH IF DISKETTE DIR ACCESS
       B    @VOLFND
*
DKET
* TO BE HERE DISKETTE ACCESS SO SET UP CORRECT POINTERS AND LENGTH TO PARSE
* R4 MUST BE ENTIRE CHARACTER COUNT AND R5 THE START
       LI   R5,PATHNM       START FOR SEARCH AT BEGINNING
       MOV  @SCNOFF,R4      USE ENTIRE OPTION LENGTH
       SZCB R4,R4             RIGht JUSTIFY
* NOW GO DIRECTLY TO NAME SEARCH
       PAGE
* NAME SEARCH R4=CHARS LEFT
*             R3=FILE NAME BUFFER LOC PTR
*             R5=PTR TO PATHNAME IN FILE NAME BUFFERS
*TO BE HERE, LOOKING FOR NAME IN PATHNAME
*
NAMESR LI   R10,COMBUF        FOR PARSING LIMIT
       MOV  R10,R2            init r2
BLCBUF MOVB @BLANK,*R10+
       CI   R10,COMBUF+10
       JNE  BLCBUF
NAMSR1 MOV  R4,R4        TEST IF ALL CHARS PARSED
       JEQ  ALPARD       BRANCH IF ALL CAHRACTERS PARSED
       B    @PARCON       BRANCH TO CONTINUE
*
*TO BE HERE, PARSING COMPLETE SO TEST IF VOL STILL SET
*
ALPARD MOVB @VOLUME,R10  TEST IF LOOKING FOR VOLUME
       JNE  BAD022       IF YES THEN ERROR   R0 ALREADY LOADED
*THE ABOVE BRANCH IS TAKEN FOR WIN. OR WIN.XXX ERROR
*TO BE HERE, WE KNOW THAT A FILE NAME IS TO BE SEARCHED
*SO GET THE NUMBER OF FILES AND THE FILE POINTERS
*
       MOV  R8,@PARPTR(R3)
       MOV  R9,@SIBPTR(R3)
*      MOV  @FBKPTR(R8),@AUNUM        THIS IS SECTOR PTR TO FILE PTRS
       MOV  @AUNUM,@INDPTR(R3)       SAVE FOR LATER USE
*
* READ DIR
* NOW GET NUMBER OF FILE PTRS
* GET DATA BUF+MANAGEMENT
*
       MOV  @NUMFIL(R8),R11
       MOV  R11,@NOPTRS        SAVE FOR LATER USE
       SRL  R11,8              RIGH JUSTIFY
* NOW READ IN FILE OF POINTERS
       MOV  R8,@RAMBUF        PUT IN PARENT BUFFER
       BLWP @RSECTR
       JEQ  BAD003            BAD READ SECTOR
       MOV  R9,@RAMBUF        use child buffer for search
       MOV  R8,R10            START OF SEARCH
ALPAR1 BLWP @FINDFL           search current dir for FILE
       JNE  NFND              not found
       B    @FFND             found
*
NFND   ABS  @DSKDIR           WAS IT FLOPPY?
       JEQ  NFNDZ

FLPRTN B    @FLPRT1           PASS THE CALL ON TO FLOPPY
*
NFNDZ  MOV  R0,R0             WAS IT A HARDWARE ERROR
       JNE  BAD003            YES, SO BOMB OUT
       CB   R6,@CBH07    IS IT DELETE?
       JEQ  DKAR         YES, SO ALL DONE, RETURN NO ERROR
* TEST IF SAVE
       CB   R6,@CBH06
       JEQ  NFND1             BRANCH IF SAVE MODE
* NOW TEST IF OPEN OPCODE
       MOVB R6,R6             TEST FOR OPEN
       JEQ  OPUO
       CB   R6,@CBH09         TEST FOR STATUS
       JEQ  NFNDST            RETURN STATUS FILE DOES NOT EXIST
*   MUST BE LOAD,BIO,PROT,RENAME SO GIVE ERROR OF 7 FILE DOES NOT EXIST
       CB   R6,@CBH0B         IF BINARY WRITE 0 (CREATE) THEN OKAY
       JEQ  BW0100            OKAY
BADOP7 LI   R0,>E000          ERROR TRYING TO LOAD/OPEN INPUT A NON EX FIL
BAD003 B    @BADOP
*
* TO BE HERE STATUS, file does not exist
NFNDST MOVB @CBH80,@SCNOFF    FILE DOES NOT EXIST
DKAR   B    @SYSRTN           BRANCH TO SYSTEM RETURN
*
OPUO
* TO BE HERE IT IS OPEN, NON EXISTENT FILE, ACCEPT ONLY UPDATE/OUTPUT/append
       COC  @H0004,R6    CHECK for update or output
       JNE  NFND1        IS UPdate or output
       COC  @H0002,R6    TEST IF INPUT
       JEQ  NFND1        BRANCH IF NOT INPUT MODE

       ABS  @DSKDIR      DSK RETURN?
       JNE  FLPRTN
       JMP  BADOP7
*
BW0100 MOV  @CHRCNT,R0        IS IT CREATE?
       JNE  BADOP7            NO, SO IT IS A NO-NO
*
* is there ROOM FOR THIS FILE?
GP2505
NFND1  LI   R0,>8000          DIRECTORY CAN'T HOLD MORE FILES
H4000  EQU  $-2
       MOV  @252(R8),R11
       JNE  BAD003            ERROR,DIRECTORY OF FILES FULL
* CREATE THE FILE, STEPS ARE:
*            GET A SECTOR
*            PUT THE FCB IN IT
*            ADD ONE TO NUMBER OF FILES IN DIRECTORY
*            PUT PTR TO FCB IN PTRS.
* FIRST GET A FREE SECTOR
       CLR  R0           TRY TO GET SECTOR AT BEGINNING OF DISK
       MOV  R9,R1             can use siblin buffer
       LI   R5,1              get 1 sector
       BLWP @GETSEC
       MOV  R0,R0             error?
       JNE  BAD003
*
* TO BE HERE, NO ERROR, POINTER IN R0
* USE SIBLIN AS FIRST DATA BUF FOR FCB
* NOW FILL FILE NAME BUFFER WITH INFORMATION
* AT THIS TIME R1 = AU of the FDR
*              R3 = PTR TO FILENAME BUFFER
*
       CLR  @DOCONT
       JMP  CONT10
*
DOCONT DATA 0
TIM1SV DATA 0            7-4-96, save old create date/time
TIM2SV DATA 0

*
CONTIN SETO @DOCONT
*
CONT10 MOV  R3,R7        RESERVE FILE NAME
       CLR  *R7               buffer is not reserved yet.
       INC  R7
       MOVB @DRIVID,*R7+ STORE DRIVE ID
       MOV  R1,*R7+      STORE LOCATION OF FDR ON WINDCHESTER
       LI   R11,LSTUP1-FNLOCD/2
CONTT1 CLR  *R7+
       DEC  R11
       JNE  CONTT1
       MOV  @TIMCM1+2,*R7+
       MOV  @TIMCM1,*R7+
       C    *R7+,*R7+    AI   R7,4 SKIP FLOPPY/WIN AND INDPTR
       MOV  R8,*R7+      SAVE LOCATION OF PARENT BUFFER
       MOV  R9,*R7+      SAVE LOCATION OF SIBLIN BUFFER
*
* NOW finish up the file DESCRIPTOR RECORD
* write it out before updating pointers or DIR, for data security and errors.
*
       MOV  R9,R7             INIT R2
       LI   R5,COMBUF
PATHF1 MOV  *R5+,*R7+
       CI   R5,COMBUF+10
       JNE  PATHF1

       MOV  @DATCRF+2(R9),@TIM1SV
       MOV  @DATCRF(R9),@TIM2SV

       LI   R5,123
ZERBF  CLR  *R7+
       DEC  R5
       JNE  ZERBF
*
       LI   R5,TIMCM1         load update time
       MOV  *R5+,@DATLUF+2(R9)
       MOV  *R5,@DATLUF(R9)
*
       MOV  @DOCONT,R7        check if file already existed
       JEQ  TTXXTT            doesn't exist - put new time/date
*      JNE  CONT20       already exists
*
       MOV  @TIM1SV,@DATCRF+2(R9)       RESTORE DATE/TIME
       MOV  @TIM2SV,@DATCRF(R9)         of creation 7.4.96
       JMP  CONT20

TTXXTT DECT R5
       MOV  *R5+,@DATCRF+2(R9) new file, load creation time
       MOV  *R5,@DATCRF(R9)
*
CONT20 MOV  @INDPTR(R3),@PARFPT(R9)
       MOV  @CHRFI,@FI(R9)
       SOCB @CBH10,@FSTATF(R9)               file has changed
*
       BL   @WRTFCB
       JEQ  BAD003
*
       MOV  @DOCONT,R5
       JNE  CONT90            skip directory update
*
* sector in R1, it goes to where R2 points
* NOW PUT POINTER IN SECTOR OF FILE POINTERS
* THIS IS POINTED TO BY PARENT AND R2 CONTAINS LOCATION OF ENTRY
*
       MOV  R8,R7        POINT TO FILE OF POINTERS IN RAM
       AI   R7,256       POINT TO END
       MOV  R1,R10       SAVE sector gotten for later use
PUSHST MOV  *R2,R11      GET POINTER TO BE PUSHED DOWN
       MOV  R10,*R2+
       MOV  R11,R10
       C    R7,R2
       JNE  PUSHST
       DECT R2           NOW STORE BACK THE PTR TO THE DIRECTORY BLOCK SEC
       MOV  R10,*R2
       MOV  @INDPTR(R3),@AUNUM    SAVE SECTOR OF POINTERS
       MOV  R8,@RAMBUF
       BLWP @WSECTR
       JNE  TTSS1
       B    @BAD003
* NOW GET THE DIR BLOCK AND ADD ONE TO NUMBER OF FILES. POINTER IS IN R8,9
TTSS1  MOV  R10,@AUNUM        SECTOR SHOULD ALREADY BE 0
       BLWP @RSECTR      GET THE DIRECTORY
       JNE  TTSS2
       B    @BAD003       CAN'T GET DIR BACK
TTSS2  AB   @CBH01,@NUMFIL(R8)
* NOW WRITE DIRECTORY CONTROL BLOCK BACK TO DISK
       BLWP @WSECTR      WRITE  IT BACK
TTSS3  JNE  CONT90       CAN'T WRITE NEW # OF FILES
       B    @BAD003
*
CONT90 MOVB @CBHFF,*R3        reserve buffer now...
*
* NOW TEST IF SAVE OR OPEN OR WRITE DIRECT
*
       CB   R6,@CBH06         TEST IF SAVE OPCODE
       JEQ  S10               BRANCH IF NOT SAVE
       CB   R6,@CBH0B         TEST FOR WRITE DIRECT
       JEQ  GP255P            IS WRITE DIRECT
       B    @NTSAVE
*
GP255P B    @BINWRP
*
* NOW THE ONLY THING TO DO IS SAVE
*
S10    MOV  R9,R7
       AI   R7,FSTATF         set up FDR
       MOV  @PFILE,*R7        set flags and records per AU
       SOCB @CBH10,*R7+       file changed since last archive
       INCT R7                skip for now lev2rc
       INC  R7                yalfu
       MOV  @CHRCNT,R5
       SWPB R5                get last sector offset
       MOVB R5,*R7
       MOVB @CHRCNH,R5        get high byte
       MOVB *R7,R11           now test if zero allocation
       JNE  S11               it is not zero
       MOV  R5,R5             zero offset, so 0 sectors?
       JEQ  SAVED2            zero sectors
       DEC  R5
S11    CLR  R4
       LI   R0,>4000          out of room
       CI   R5,>FFFE          can only do >FFFF sectors
       JH   BADOP
       BLWP @GETAUS           get r5 sectors

; Fix 11.18.2023:
       MOV  R0,R7        ;11.18.2023
       JEQ  NOFALT       ;no error
       CLR  R5           ;if error, ZAP sector count
;                        ;S9 will allow 1 sector
;                        ;we could try -1 (>FFFF) as an option

;      MOV  R0,R0             error?
;      JNE  BADOP

NOFALT MOV  @PTRPRE(R9),R0    get to the first FDR
       JEQ  S9
       BL   @WRTFCB           MAKE SURE FCB WRITTEN
       JEQ  BADOP
       BL   @TOPFCB           GET TO TOP FCB
       JEQ  BADOP

; Where is this R5 coming from? Is it GETAUS or the earlier value
;
S9     INC  R5                NUMBER OF SECTORS
       MOV  R5,@LEV2RC(R9)    currently allocated via GETAUS
       BL   @WRTFCB      so,why doesn't SAVE reflect this in a DIR
       JEQ  BADOP        is the error trapping before this?

       MOV  R7,R0        ;11.18.2023
       JNE  BADOPC       ;ERROR AFTER THE FCB IS CAPTURED

* NOW JUST SAVE DATA
* AT TOP FCB SO START SAVING
       MOV  R5,R10       NUMBER OF SECTORS TO SAVE
       CLR  R5           START TO SAVE AT FIRST SECTOR
       CLR  R4
FILSE4 BLWP @GETAUS      POSITION TO THAT SECTOR
* NOW GET 256 CHARACTERS TO THE RAM BUFFER
       LI   R6,>0100
H0100  EQU  $-2
PFILE  EQU  $-2
       MOV  R6,@PASCNT      256 BYTES
       SETO @PASRW          READ FROM USER TO DSR
       MOVB @CPUFLG,@PASVDP CPU OR VDP
       MOV  @MYUADL,@PASADL ADDRESS
       MOVB @MYUADH+1,@PASADH
       MOV  R8,@PASDSR
       BLWP @PASDAT
       BLWP @ADDADR
       MOV  R8,@RAMBUF
       BLWP @WSECTR
       JEQ  BADOP
       INC  R5
       DEC  R10
       JNE  FILSE4
       JMP  SYSRTN
*
* NOW WRITE OUT FCB
SAVED2 BL   @WRTFCB
       PAGE
* NOW FREE UP FILE NAME BUFFER AND DATA BUFFERS
SYSRTN CLR  R0
BADOPC CLR  *R3          CLEAR DATA BUFFER
BADOP  SOCB R0,@PABERR       SET ERROR BITS IN STATUS  BITS

FINISH
SYSRT2
RTNOPB
* NOW DO RETURN TO SYSTEM
RTNORS
RTNORG SBZ  0                 TURN OFF CARD

RTNHGG B    @SYSRT1           GOOD RETURN
*
       PAGE
PARCON
*TO BE HERE, CONTINUE PARSING PATH NAME
       LI   R0,>4000     ERROR ".." OR BLANK EMBEDDED IN PATHNAME
       DEC  R4           DECREMENT TOTAL LENGTH COUNTER
       MOVB *R5+,R1      COMPARE TO BLANK
       JLT  LIKEDP       IN CASE OF FLOPPY VOLUME SEARCH
       CB   R1,@BLANK
**THE ERROR IS BLANK IN PATH NAME
       JEQ  BADOP        IF BLANK THEN ERROR BRANCH
************
       CB   R1,@DPT      COMPARE TO DPT
       JEQ  LIKEDP       BRANCH IF NOT
* TEST IF MORE THAN 10 CHARS PARSED
       CI   R2,COMBUF+10
       JEQ  BADOP             11 OR MORE CHARS
       MOVB R1,*R2+
       B   @NAMSR1
*
LIKEDP CI   R2,COMBUF    IF DPT TEST IF XXX....
**THE ERROR IS XX..
       JEQ  BADOP        BRANCH IF ERROR
PARCO1 MOVB @VOLUME,R2   TEST IF VOLUME NAME SEARCH
       JEQ  NOTVOL       JUMP IF NOT
       LI   R2,1         USUALLY START SEARCH AT 1
NXTDRV MOV  R2,@VOLUME
       MOV  R8,@RAMBUF   GET POINTER TO DATA BUFFER
       MOV  R8,R11
       BLWP @RSECDR      (DRIVE=0 ALREADY)
NXTDR4 JEQ  BADOP
* ABOVE BRANCH IF NOT READABLE TO ERROR
* NOW TEST IF NAME MATCHES
* COMPARE COMBUF WITH VOL/DIR NAME IN DATA BUFFER IN R1
       LI   R7,COMBUF
NXTCS  C    *R7+,*R11+   COMPARE
       JNE  NXTDR1
       CI   R7,COMBUF+10
       JNE  NXTCS
       B    @NAMESR           CONTINUE
*
NXTDR1 INC  R2
       C    R2,@MAXDRV
       JLE  NXTDRV       JUMP IF NOT THROUGH ERROR BRANCH
* NOW IF NONE OF THE DRIVES ARE WDS.VOL NAME SO TEST IF DSK.
FPDNF  LI   R0,>E000         VOLUME NAME CALLED FOR NOT FOUND ERROR
BAD010 JMP  BADOP             error, volume name not found
*
*
* NOW SEARCH THROUGH DIRECTORY FOR NAME IN COMBUF
*
NOTVOL MOV  R8,R10       NOW GET TOP POINTER AND PUT IN R8,# IN DIRECTORY IN R9
       AI   R10,DIRPTS          MOVE POINTER TO FIRST ENTRY
       MOV  @NUMFIL(R8),R11
       SZCB R11,R11
       MOV  R9,@RAMBUF
       BLWP @FINDFL           do binary search of current SUBDIRS
       JEQ  DIRFND            name found
       ABS  @DSKDIR
       JEQ  NOTVO6
       B    @FLPRTN           COULDN'T FIND IT
*
NOTVO6 MOV  R0,R0
       JNE  BAD010            hardware error
********************************************************************************
*  NOW THE ONLY WAY WE CAN BE HERE IS:
*      1) WDS1.XXX. ETC.   IN WHICH CASE WE BOMB IF LOAD,SAVE,OPEN,DELETE
*                                    AND IN CASE OF STATUS, RETURN A NOT EXISTS
*
*      2) DSK.XXXXXX. ETC   IN WHICH CASE WE TRY THE FLOPPY DSK.XXXXX
*
*      3) DSK1.YYYYY. ETC  IN WHICH CASE WE MAY WANT TO TRY THE FLOPPY IF EXISTS
*                          OR PASS THE CALL ON IF WE ARE NOT DSK1
********************************************************************************
*
* THE ONLY OPCODES OF INTEREST ARE STATUS (DIR DOESN'T EXIST)
*                                  SAVE IF CREATION OF DIR
*                                  DELETE (THEN NO ERROR)
*        ERROR 7 IF OPEN,LOAD,SAVE,BREAD,BWRITE,PROTECT,RENAME
*
       MOV  R4,R4             R0 = 0 AT THIS POINT
       JNE  DNFN00            CAN NOT BE CREATE DIR
       CB   R6,@SAVEOP        IS IT SAVE?   BECAUSE ALL PARSED
       JNE  DNFN00            NO
       B    @DCRE00           TRY TO CREATE THE DIR
*
* NOW IF OPEN OR SAVE, BAD OP 7
DNFN00 LI   R0,>E000
       CB   R6,@DELOP
       JEQ  BADOP
       CB   R6,@STATOP
       JNE  FPDNF
       B    @NFNDST
TSWITCH DATA 0
*
DIRFND
*
* TO BE HERE, DIRECTORY WAS FOUND
* NOW SEE IF DIR READ
* UPDATE POINTERS
*


       MOV  R8,@TSWITCH
       MOV  R9,R8
       MOV  @TSWITCH,R9
*      XOR  R8,R9             exchange r8,r9
*      XOR  R9,R8
*      XOR  R8,R9             NOW R8 POINTS TO SUB DIR, R9 TO DIR ITSELF
       MOV  @DIRAUN,@ANDIR    save parent of current dir
       MOV  @AUNUM,@DIRAUN    current dir
VOLFND MOV  @FBKPTR(R8),@AUNUM  POINTER TO THE ASSOC FILE POINTER ON DISK
       MOV  R4,R4             no chars left in pathname
       JEQ  DIREAD            it must be a dir access
       B    @NAMESR           more to search
       PAGE
DIREAD
* IT IS A DIRECTORY SITUATION
       CB   R6,@DIROP         SET PATHNAME?
       JHE  GP3BZZ            IT IS CALL DIR
*
*     TO BE HERE, IT CAN BE THE FOLLOWING
*   OPEN
*   SAVE (CREATE DIRECTORY)        SHOULD NOT BE CLOSE,READ,WRITE,RESTORE
*   DELETE (DELETE DIRECTORY)                    LOAD,PROTECT
*   BREAD (ONLY OF "WDSX.")
*   BWRITE (ONLY OF "WDSX.")
*   RENAME (RENAME DIRECTORY)
*   STATUS (STATUS IE IT DOES EXIST)
*
       LI   R0,>6000          BAD OPERATION
       MOV  R6,R1
       SRL  R1,8
       SLA  R1,1              GET THE BRANCH TABLE INDEX
       MOV  @DIRTBL(R1),R1
       B    *R1
*
DIRTBL DATA DFOPN,BADOP,BADOP,BADOP,BADOP    OPEN,CLOSE,READ,WRITE,RESTORE
       DATA BADOP,BAD022,DELDIR,BADOP,STADIR LOAD,SAVE,DELETE,NA,STATUS
       DATA BIO,BIO,BADOP,RNDIR              BREAD,BWRITE,PROTECT,RENAME
*
STADIR CLR  R0
       MOVB @H54,@SCNOFF
BAD310 JMP  BAD010
*
H54    BYTE >54
*
DFOPN  LI   R0,>4000          BAD PARMS
       CI   R6,>000D          ACCEPT INTERNAL,FIXED,INPUT,RELATIVE
       JEQ  DIREA1            BRANCH IF CORRECT PARMS
       CI   R6,>000C          ACCEPT OR INTERNAL,FIXED,INPUT,SEQUENTIAL
       JNE  BAD010            BRANCH IF BAD PARMS
DIREA1 MOV  @LRECLN,R11       LENGTH IS char length 11,and (3+6+6)*9
       JNE  DIREA2                    or 11+15*9=146 or >92
       MOV  @H0092,@LRECLN
       JMP  DIREA1
*
DIREA2 CI   R11,>0092
H0092  EQU  $-2
       JNE  BAD010
* THE PATHNAME IS ALREADY THERE
GP3BZZ
*
*  NOW SET FLAG IF TOP LEVEL DIR OR SUB DIR
*   THIS CAN BE GOTTEN FROM THE FLAG FNDDIR
*
       MOV  @ANDIR,@FNVSOF(R3)  PUT IN FILE CONTROL BLOCK
       MOV  R9,@RAMBUF
       BLWP @RSECTR           GET SECTOR OF FILE POINTERS
       JEQ  BAD010
       MOV  R8,@PARPTR(R3)
       MOV  R9,@SIBPTR(R3)
       CLR  @RECNUM
       MOVB R6,R6             OPEN OR CALL DIR?
       JEQ  DIREA4
       B    @CDIR2            CONTINUE WITH CALL DIR
*
DIREA4 SETO *R3
       MOVB @VOLUME+1,@1(R3)  RESERVE BUFFER
DIREA3 B    @FINISH
*
DELDIR
********************************************************************************
*      DELETE DIRECTORY
*           1) YOU CAN NOT DELETE THE MAIN DIRECTORIES
*           1) REMOVE FROM PARENT DIRECTORY AND DECREMENT # OF SUBS
*           2) RESTORE BIT MAP AU'S
********************************************************************************
       LI   R0,>2000          write protect error on dirs which can't go
       MOV  @DIRAUN,R11       can't delete the main dir
       JEQ  BAD310            even though the idiot was trying
       MOV  @NUMFIL(R8),R11   test for children of this dir
       JNE  BAD310            it has children, can't delete it
*
       DEC  @NUMFIL(R9)       one less subdir under parent
       MOV  R9,R10
       AI   R10,DIRPTS
       MOV  R9,R11
       AI   R11,256
       MOV  @DIRAUN,R1
GP2901 C    *R10+,R1       IS THIS THE ONE?
       JNE  GP2901
       MOV  R10,R5
       DECT R5
GP2903 C    R10,R11
       JEQ  GP2902
       MOV  *R10+,*R5+
       JMP  GP2903
*
GP2902 MOV  R9,@RAMBUF
       MOV  @PARDIR(R8),@AUNUM
       BLWP @WSECTR      WRITE IT BACK
       JEQ  BAD110       ERROR
       CLR  R2           ONLY 1 SECTOR, AUNUM SET IN R1 ABOVE
       MOV  @FBKPTR(R8),R7
       BLWP @FRBITM           this call maps out *r8 ...
       MOV  R0,R0
       JNE  BAD110
       MOV  R7,R1
       BLWP @FRBITM
       JMP  BAD110            ERROR CODE IN R0
       PAGE
********************************************************************************
*      CREATE DIRECTORY       r8 = parent, r9 = subdir
*      1) IS THERE ROOM IN CURRENT DIR FOR A SUB DIR?
*      2) DOES IT EXIST ALREADY
*      3) GET 2 SECTORS
*      4) UPDATE THE CURRENT DIRECTORY
*      5) CREATE DIR AND POINTERS FILE
********************************************************************************
DCRE00 LI   R0,>8000          OUT OF ROOM
       CB   @NUMDIR(R8),@CBD114 CAN ANOTHER DIRECTORY BE GOTTEN?
       JHE  BAD110             NO
       CLR  R0           GET 2 SECTORS STARTING AT THE BEGINNING
       LI   R5,2
       BLWP @GETSEC
       MOV  R0,R0
       JNE  BAD110
       MOV  R1,R3        FIRST SECTOR
       INC  R1           SECOND SECTOR?
       CI   R5,2
       JEQ  GP2800       2 CONTIGUOUS SECTORS STARTING AT R1
       MOV  R1,R0        START AT SECTOR R1
       LI   R5,1         R5 MUST BE 1 ALREADY
       BLWP @GETSEC
       MOV  R0,R0
       JNE  BAD110
GP2800 INC  @NUMFIL(R8)  ONE MORE DIR
       MOV  R8,R10
       AI   R10,256
       MOV  *R2,R4
       MOV  R3,R7        SAVE STARTING SECTOR
GP2801 MOV  R3,*R2+      PUT THE NEW SECTOR IN
       MOV  R4,R3
       MOV  *R2,R4
       C    R2,R10
       JL   GP2801
       MOV  R8,@RAMBUF
       MOV  @VOLUME,R11
       SLA  R11,2
       MOV  @DIRAUN,@AUNUM  PUT BACK THE PARENT DIRECTORY
DEB000 BLWP @WSECTR
       JEQ  BAD110
       MOV  R8,R2
       LI   R4,COMBUF    MOVE NAME FROM COMBUF
       MOV  *R4+,*R2+
       MOV  *R4+,*R2+
       MOV  *R4+,*R2+
       MOV  *R4+,*R2+
       MOV  *R4,*R2+
       AI   R2,3         MAINTAIN # OF AU'S AND SEC/TRK
       LI   R4,CHRDIR
       MOVB *R4+,*R2+
       MOVB *R4+,*R2+
       MOVB *R4+,*R2+
       CLR  *R2+
       MOV  @TIMCM2,*R2+ DATE AND TIME OF CREATION
       MOV  @TIMCM1,*R2+
       CLR  *R2+         NO FILES OR DIRS
       MOV  R1,*R2+      POINTER TO FILES
       MOV  @DIRAUN,*R2+   POINTER TO PARENT DIR
GP2802 CLR  *R2+         CLEAR OUT SUBDIR POINTERS
       C    R2,R10
       JL   GP2802
       MOV  R7,@AUNUM
       BLWP @WSECTR      WRITE OUT THE NEW DIR
       JEQ  BAD110
       MOV  R8,R2
GP2803 CLR  *R2+         CLEAR THE POINTERS
       C    R2,R10
       JL   GP2803
       MOV  R7,@254(R8)  BACK POINTER
GP2A05 MOV  R1,@AUNUM
       BLWP @WSECTR
BAD110 B    @BADOP

RNDIR2 LI   R0,>4000          duplicate filename
       JMP  BAD110
       PAGE
********************************************************************************
*      RENAME DIRECTORY
*
********************************************************************************
RNDIR  BL   @PBTOCB      MOVE NEW NAME TO COMBUF  USES R0
       MOV  @DIRAUN,@AUNUM     IS IT SECTOR 0?
       JEQ  RNDIR1            YES, SO JUST RENAME
       MOV  @NUMFIL(R9),R11
       SZCB R11,R11
       MOV  R9,R10
       AI   R10,DIRPTS   SEARCH TAKES PLACE IN R8 BUFFER
       BLWP @FINDFL      SEE IF NEW NAME ALREADY EXISTS
       JEQ  RNDIR2       YES, SO BOMB
       MOV  R0,R0
       JNE  BAD110       HARDWARE ERROR
       MOV  R8,@RAMBUF     GET THE SECTOR HERE
       MOV  @DIRAUN,@AUNUM    get sector to update
       BLWP @RSECTR
       JEQ  BAD110       READ ERROR
RNDIR1 LI   R11,COMBUF   MOVE NAME IN COMBUF TO DIR CONTROL RECORD
       MOV  R8,R0
       MOV  *R11+,*R0+
       MOV  *R11+,*R0+
       MOV  *R11+,*R0+
       MOV  *R11+,*R0+
       MOV  *R11,*R0
       BLWP @WSECTR
       JEQ  BAD110
       MOV  @AUNUM,R7
       JEQ  BAD110            ALL DONE WITH SECTOR 0 RENAME
       MOV  R9,R10
       AI   R10,256+2         allow overflow during insertion
       MOV  R9,R11
       AI   R11,DIRPTS
       MOV  R2,R3             save new pointer location
*                             insert pointer at new location
GP2A01 MOV  *R2,R6
       MOV  R7,*R2+
       MOV  R6,R7
       C    R2,R10
       JL   GP2A01
*
       INCT R3                allow for fact that R11 is incremented after comp.
GP2A02 C    *R11+,@AUNUM
       JNE  GP2A02            there's no way to miss the old pointer.
       C    R11,R3            we found the new pointer...
       JEQ  GP2A02
       MOV  R11,R5
       DECT R5                pointer to remove
GP2A03 MOV  *R11+,*R5+
       C    R11,R10
       JL   GP2A03
       MOV  R9,@RAMBUF
       MOV  @ANDIR,R1
       JMP  GP2A05
       PAGE
       DATA >1234

; eof (continued in part B)
